{"version":3,"file":"mab_options_updater.min.js","sources":["../src/mab_options_updater.js"],"sourcesContent":["let allmaboptions = [];\n\nexport const init = (maboptions) => {\n    // Save the original MAB dropdown list options.\n    allmaboptions = maboptions;\n\n    // Get the MAP dropdown list.\n    let mapselect = document.getElementById('id_gradepushmapselect');\n\n    // Exit if the MAP dropdown list is not found.\n    if (mapselect === null) {\n        window.console.log('MAP dropdown list not found');\n        return;\n    }\n\n    // Add onchange event listener to the MAP dropdown list.\n    mapselect.addEventListener('change', (e) => {\n        e.preventDefault();\n        // Update the MAB dropdown list.\n        updateMABDropdownList(mapselect.value);\n    });\n};\n\n/**\n * Schedule a task to push grades to SITS.\n * @param {string} mapid\n */\nfunction updateMABDropdownList(mapid) {\n    // Get the MAB dropdown select element.\n    const mabselect = document.getElementById('id_gradepushassessmentselect');\n\n    // Exit if the MAB dropdown list is not found.\n    if (mabselect === null) {\n        window.console.log('MAB dropdown list not found');\n        return;\n    }\n\n    // Clear all options from the MAB dropdown list except the first one.\n    mabselect.options.length = 1;\n\n    // No filter.\n    if (mapid === \"0\") {\n        // Add all options to the MAB dropdown list.\n        allmaboptions.forEach((object) => {\n            addOptionToSelect(mabselect, object.text, object.value, object.disabled);\n        });\n    } else {\n        // Add options to the MAB dropdown list based on the MAP ID.\n        const filteredOptions = allmaboptions.filter((object) => object.mapcode === mapid);\n        filteredOptions.forEach((object) => {\n            addOptionToSelect(mabselect, object.text, object.value, object.disabled);\n        });\n    }\n}\n\n/**\n * Add an option to a select element.\n * @param {HTMLElement} selectElement\n * @param {string} text\n * @param {string} value\n * @param {string} disabled\n */\nfunction addOptionToSelect(selectElement, text, value, disabled = '') {\n    const option = document.createElement(\"option\");\n    option.text = text;\n    option.value = value;\n    option.disabled = disabled;\n    selectElement.add(option);\n}\n"],"names":["allmaboptions","addOptionToSelect","selectElement","text","value","disabled","option","document","createElement","add","maboptions","mapselect","getElementById","addEventListener","e","preventDefault","mapid","mabselect","window","console","log","options","length","forEach","object","filter","mapcode","updateMABDropdownList"],"mappings":"kKAAIA,cAAgB,YA8DXC,kBAAkBC,cAAeC,KAAMC,WAAOC,gEAAW,SACxDC,OAASC,SAASC,cAAc,UACtCF,OAAOH,KAAOA,KACdG,OAAOF,MAAQA,MACfE,OAAOD,SAAWA,SAClBH,cAAcO,IAAIH,sBAjEDI,aAEjBV,cAAgBU,eAGZC,UAAYJ,SAASK,eAAe,yBAGtB,OAAdD,UAMJA,UAAUE,iBAAiB,UAAWC,IAClCA,EAAEC,0BAUqBC,aAErBC,UAAYV,SAASK,eAAe,mCAGxB,OAAdK,sBACAC,OAAOC,QAAQC,IAAI,kCAKvBH,UAAUI,QAAQC,OAAS,EAGb,MAAVN,MAEAhB,cAAcuB,SAASC,SACnBvB,kBAAkBgB,UAAWO,OAAOrB,KAAMqB,OAAOpB,MAAOoB,OAAOnB,iBAEhE,CAEqBL,cAAcyB,QAAQD,QAAWA,OAAOE,UAAYV,QAC5DO,SAASC,SACrBvB,kBAAkBgB,UAAWO,OAAOrB,KAAMqB,OAAOpB,MAAOoB,OAAOnB,cA/BnEsB,CAAsBhB,UAAUP,UARhCc,OAAOC,QAAQC,IAAI"}