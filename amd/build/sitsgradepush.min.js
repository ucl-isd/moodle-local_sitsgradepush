define("local_sitsgradepush/sitsgradepush",["exports","./sitsgradepush_helper","./progress","core/notification"],(function(_exports,_sitsgradepush_helper,_progress,_notification){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=(obj=_notification)&&obj.__esModule?obj:{default:obj};let updatePageIntervalId=null;async function updateTasksInfo(courseid){let update=await(0,_sitsgradepush_helper.getAssessmentsUpdate)(courseid);if(update.success){let assessments=JSON.parse(update.assessments);assessments.length>0?(function(assessments){let taskStatusContainers=document.querySelectorAll(".task-status"),assessmentsHasTasks=assessments.filter((assessment=>null!==assessment.task)),assessmentIds=new Set(assessmentsHasTasks.map((item=>item.assessmentmappingid)));taskStatusContainers.forEach((taskStatusContainer=>{assessmentIds.has(taskStatusContainer.getAttribute("data-assessmentmappingid"))||(taskStatusContainer.innerHTML="")})),assessmentsHasTasks.forEach((assessment=>{let task=assessment.task,progressBarId="progress-bar-"+task.assessmentmappingid,progressBar=document.getElementById(progressBarId);if(progressBar)(0,_progress.updateProgressBar)(progressBar,task.progress);else{progressBar=(0,_progress.createProgressBar)(progressBarId,"async",task.assessmentmappingid,0);let taskStatusContainer=document.getElementById("task-status-container-"+task.assessmentmappingid);if(taskStatusContainer){let spinner=(0,_progress.createSpinner)("text-primary","spinner-border-sm");taskStatusContainer.appendChild(spinner),taskStatusContainer.appendChild(progressBar)}}}))}(assessments),function(assessments){document.querySelectorAll(".last-transfer-task-date").forEach((container=>{let assessment=assessments.find((assessment=>assessment.assessmentmappingid===container.getAttribute("data-assessmentmappingid")));assessment&&null!==assessment.lasttransfertime&&(container.innerHTML=assessment.lasttransfertime)}))}(assessments)):clearInterval(updatePageIntervalId)}else clearInterval(updatePageIntervalId),window.console.error(update.message)}_exports.init=(courseid,coursemoduleid,mappingids)=>{!function(courseid,mappingids){let pushbuton=document.getElementById("local_sitsgradepush_pushbutton_async");if(null===pushbuton)return;let promises=[];pushbuton.addEventListener("click",(async e=>{e.preventDefault();let total=mappingids.length,count=0;mappingids.forEach((function(mappingid){let promise=(0,_sitsgradepush_helper.schedulePushTask)(mappingid).then((function(result){if(result.success)count+=1;else{let errormessagerow=document.createElement("tr");errormessagerow.setAttribute("class","error-message-row"),errormessagerow.innerHTML='<td colspan="6>"><div class="alert alert-danger" role="alert">'+result.message+"</div></td>";let currentrow=document.getElementById("task-status-container-"+mappingid).closest("tr");null!==currentrow.nextElementSibling&&currentrow.nextElementSibling.classList.contains("error-message-row")&&currentrow.nextElementSibling.remove(),currentrow.insertAdjacentElement("afterend",errormessagerow)}return result.success})).catch((function(error){window.console.error(error)}));promises.push(promise)})),await Promise.all(promises),await updateTasksInfo(courseid),await _notification.default.addNotification({message:count+" of "+total+" push tasks have been scheduled.",type:count===total?"success":"warning"})}))}(courseid,mappingids),updateTasksInfo(courseid),updatePageIntervalId=setInterval((()=>{updateTasksInfo(courseid)}),15e3)}}));

//# sourceMappingURL=sitsgradepush.min.js.map